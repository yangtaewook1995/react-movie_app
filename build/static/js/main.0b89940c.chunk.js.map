{"version":3,"sources":["api.js","Components/Section.js","Components/Loader.js","Components/Message.js","asset/noPosterSmall.png","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/TV/index.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Search/index.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","movieApi","get","id","append_to_response","term","query","tvApi","encodeURIComponent","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","Text","Error","text","Image","props","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","noPoster","length","substring","HomePresenter","nowPlaying","popular","upcoming","error","loading","Helmet","map","movie","original_title","poster_path","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","isshow","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","Message","SearchContainer","event","preventDefault","searchByTerm","target","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","match","push","history","parsedId","Number","isNaN","includes","path","exact","component","Home","TV","Search","Detail","from","globalStyle","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b89940c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"5bffb8ca99dbfae576ba658a895078ee\",\n    language: \"en-US\",\n  },\n});\n\nexport const movieApi = {\n  nowPlaying: () => api.get(\"/movie/now_playing\"),\n  popular: () => api.get(\"/movie/popular\"),\n  upcoming: () => api.get(\"/movie/upcoming\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"/tv/top_rated\"),\n  popular: () => api.get(\"/tv/popular\"),\n  airingToday: () => api.get(\"/tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n  :first-child {\n    margin-top: 20px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nfunction Section({ title, children }) {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Grid>{children}</Grid>\n    </Container>\n  );\n}\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 50px;\n`;\n\nfunction Loader() {\n  return (\n    <Container>\n      <span role=\"img\" aria-label=\"Loading\">\n        ⏰\n      </span>\n    </Container>\n  );\n}\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: red;\n  font-weight: 600;\n`;\n\nconst Error = ({ text }) => (\n  <Container>\n    <Text>{text}</Text>\n  </Container>\n);\n\nexport default Error;\n","export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport noPoster from \"../asset/noPosterSmall.png\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.6;\n    }\n\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nfunction Poster({ id, imageUrl, title, rating, year, isMovie = false }) {\n  return (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n      <Container>\n        <ImageContainer>\n          <Image\n            bgUrl={\n              imageUrl\n                ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n                : `${noPoster}`\n            }\n          ></Image>\n          <Rating>\n            <span role=\"img\" aria-label=\"rating\">\n              ⭐️\n            </span>{\" \"}\n            {rating}/10\n          </Rating>\n        </ImageContainer>\n        <Title>\n          {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n        </Title>\n        <Year>{year}</Year>\n      </Container>\n    </Link>\n  );\n}\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Error from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nfunction HomePresenter({ nowPlaying, popular, upcoming, error, loading }) {\n  return loading ? (\n    <Loader></Loader>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>Movies | Netflix</title>\n      </Helmet>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying.map((movie) => (\n            <Poster\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              key={movie.id}\n              id={movie.id}\n              isMovie={true}\n              rating={movie.vote_average}\n              year={\n                movie.release_date ? movie.release_date.substring(0, 4) : \"\"\n              }\n            ></Poster>\n          ))}\n        </Section>\n      )}\n\n      {upcoming && upcoming.length > 0 && (\n        <Section title=\"UpComing Movies\">\n          {upcoming.map((movie) => (\n            <Poster\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              key={movie.id}\n              id={movie.id}\n              isMovie={true}\n              rating={movie.vote_average}\n              year={\n                movie.release_date ? movie.release_date.substring(0, 4) : \"\"\n              }\n            ></Poster>\n          ))}\n        </Section>\n      )}\n\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Movies\">\n          {popular.map((movie) => (\n            <Poster\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              key={movie.id}\n              id={movie.id}\n              isMovie={true}\n              rating={movie.vote_average}\n              year={\n                movie.release_date ? movie.release_date.substring(0, 4) : \"\"\n              }\n            ></Poster>\n          ))}\n        </Section>\n      )}\n      {error && <Error text={Error}></Error>}\n    </Container>\n  );\n}\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import { movieApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    nowPlaying: null,\n    popular: null,\n    upcoming: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await movieApi.nowPlaying();\n\n      const {\n        data: { results: popular },\n      } = await movieApi.popular();\n\n      const {\n        data: { results: upcoming },\n      } = await movieApi.upcoming();\n\n      this.setState({\n        nowPlaying: nowPlaying,\n        upcoming: upcoming,\n        popular: popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Error Occur\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, popular, upcoming, loading, error } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        popular={popular}\n        upcoming={upcoming}\n        error={error}\n        loading={loading}\n      ></HomePresenter>\n    );\n  }\n}\n\nexport default HomeContainer;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Error from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nfunction TVPresenter({ topRated, popular, airingToday, error, loading }) {\n  return loading ? (\n    <Loader></Loader>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>TV Shows | Netflix</title>\n      </Helmet>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated\">\n          {topRated.map((show) => (\n            <Poster\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              key={show.id}\n              id={show.id}\n              isshow={false}\n              rating={show.vote_average}\n              year={\n                show.first_air_date ? show.first_air_date.substring(0, 4) : \"\"\n              }\n            ></Poster>\n          ))}\n        </Section>\n      )}\n\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"AiringToday Shows\">\n          {airingToday.map((show) => (\n            <Poster\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              key={show.id}\n              id={show.id}\n              isshow={false}\n              rating={show.vote_average}\n              year={\n                show.first_air_date ? show.first_air_date.substring(0, 4) : \"\"\n              }\n            ></Poster>\n          ))}\n        </Section>\n      )}\n\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Shows\">\n          {popular.map((show) => (\n            <Poster\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              key={show.id}\n              id={show.id}\n              isshow={false}\n              rating={show.vote_average}\n              year={\n                show.first_air_date ? show.first_air_date.substring(0, 4) : \"\"\n              }\n            ></Poster>\n          ))}\n        </Section>\n      )}\n      {error && <Error text={Error}></Error>}\n    </Container>\n  );\n}\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nclass TVContainer extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated: topRated,\n        airingToday: airingToday,\n        popular: popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Error Occur\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      ></TVPresenter>\n    );\n  }\n}\n\nexport default TVContainer;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  margin-top: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nfunction SearchPresenter({\n  movieResults,\n  tvResults,\n  error,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n}) {\n  return (\n    <Container>\n      <Helmet>\n        <title>Search | Netflix</title>\n      </Helmet>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search Movies or TV Shows...\"\n          value={searchTerm}\n          onChange={updateTerm}\n        ></Input>\n      </Form>\n      {loading ? (\n        <Loader></Loader>\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map((movie) => {\n                return (\n                  <Poster\n                    title={movie.original_title}\n                    imageUrl={movie.poster_path}\n                    key={movie.id}\n                    id={movie.id}\n                    isMovie={true}\n                    rating={movie.vote_average}\n                    year={\n                      movie.release_date\n                        ? movie.release_date.substring(0, 4)\n                        : \"\"\n                    }\n                  ></Poster>\n                );\n              })}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {tvResults.map((show) => {\n                return (\n                  <Poster\n                    title={show.original_name}\n                    imageUrl={show.poster_path}\n                    key={show.id}\n                    id={show.id}\n                    isshow={false}\n                    rating={show.vote_average}\n                    year={\n                      show.first_air_date\n                        ? show.first_air_date.substring(0, 4)\n                        : \"\"\n                    }\n                  ></Poster>\n                );\n              })}\n            </Section>\n          )}\n        </>\n      )}\n      {error && <Message text={error}></Message>}\n      {tvResults &&\n        movieResults &&\n        tvResults.length === 0 &&\n        movieResults.length === 0 && <Message text=\"Nothing Found\"></Message>}\n    </Container>\n  );\n}\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nclass SearchContainer extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") this.searchByTerm(searchTerm);\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await movieApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({\n        error: \"Error Occur\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      error,\n      loading,\n      updateTerm,\n    } = this.state;\n\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      ></SearchPresenter>\n    );\n  }\n}\n\nexport default SearchContainer;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n// style\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid ${(props) => (props.current ? \"red\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n// main\n// 5bffb8ca99dbfae576ba658a895078ee\nconst HeaderC = ({ location: { pathname } }) => {\n  return (\n    <Header>\n      <List>\n        <Item current={pathname === \"/\"}>\n          <SLink to=\"/\">Movies</SLink>\n        </Item>\n        <Item current={pathname === \"/tv\"}>\n          <SLink to=\"/tv\">TV</SLink>\n        </Item>\n        <Item current={pathname === \"/search\"}>\n          <SLink to=\"/search\">Search</SLink>\n        </Item>\n      </List>\n    </Header>\n  );\n};\n\nexport default withRouter(HeaderC);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport noPoster from \"../../asset/noPosterSmall.png\";\nimport Helmet from \"react-helmet\";\n\n//ToDo\n// youtube video 추가\n// IMDB 링크 (id로)\n// 영화사\n// 나라\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 70px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-position: center center;\n  background-size: cover;\n  background-image: url(${(props) => props.bgImage});\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  position: relative;\n`;\n\nconst Cover = styled.div`\n  background-size: cover;\n  height: 100%;\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nfunction DetailPresenter({ result, error, loading }) {\n  return loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Netflix</title>\n      </Helmet>\n      <Loader></Loader>\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Netflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`}\n      ></Backdrop>\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original/${result.poster_path}`\n              : `${noPoster}`\n          }\n        ></Cover>\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>.</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>.</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n}\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nclass DetailContainer extends React.Component {\n  state = {\n    result: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n      location: { pathname },\n    } = this.props;\n\n    const parsedId = Number(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    this.isMovie = pathname.includes(\"/movie\");\n    let result = null;\n    try {\n      if (this.isMovie) {\n        ({ data: result } = await movieApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't get detail\" });\n    } finally {\n      this.setState({\n        loading: false,\n        result: result,\n      });\n    }\n  }\n\n  render() {\n    const { result, loading, error } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n      ></DetailPresenter>\n    );\n  }\n}\n\nexport default DetailContainer;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home/index\";\nimport TV from \"Routes/TV/index\";\nimport Search from \"Routes/Search/index\";\nimport Header from \"./Header\";\nimport Detail from \"Routes/Detail/index\";\n\nexport default () => (\n  <Router>\n    <Header></Header>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyle = createGlobalStyle`\n  ${reset}\n\n  a {\n    text-decoration: none;\n    color : inherit;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n  \n  body {\n    font-family : -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size : 12px;\n    background-color : black;\n    color : white;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyle;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles></GlobalStyles>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}